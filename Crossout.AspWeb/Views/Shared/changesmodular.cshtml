@using Crossout.Model.Items
@using Crossout.AspWeb
@using Crossout.AspWeb.Models
@using Crossout.AspWeb.Models.Changes
@model Crossout.AspWeb.Models.Changes.ChangesModel


<table id="ChangesTable" class="table table-striped table-hover table-borderless table-responsive">
    <thead>
        <tr>
            <th>
                Change Number
            </th>
            <th>
                Affected Item
            </th>
            <th>
                Change Type
            </th>
            <th>
                Changed Variable
            </th>
            <th>
                Old Value
            </th>
            <th>
                New Value
            </th>
            <th>
                Timestamp
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (ChangeItem item in Model.Changes)
        {
            <tr data-id="@item.Id">
                <td class="align-middle">
                    <div>#@item.Id</div>
                </td>
                <td class="align-middle">
                    <div class="d-flex align-items-center">
                        <div class="mr-1">
                            @if (Model.ContainedItems[item.ItemId].ImageExists)
                            {
                                <a href="~/item/@item.ItemId">
                                    <img class="changes-image" src="~/img/items/@(item.ItemId).png" />
                                </a>
                            }
                            else
                            {
                                <a href="~/item/@item.ItemId">
                                    <img class="changes-image" src="~/img/NoImage.png" />
                                </a>
                            }
                        </div>
                        <div>
                            <a href="~/item/@item.ItemId">@Model.ContainedItems[item.ItemId].Name</a>
                        </div>
                    </div>
                </td>
                <td class="align-middle">
                    <div>@item.ChangeType</div>
                </td>
                <td class="align-middle">
                    <div>@item.TranslatedField</div>
                </td>
                <td class="align-middle">
                    @if (item.Field == "ingredient" && item.OldValue != "")
                    {
                        int id = Convert.ToInt32(item.OldValue);
                        <div class="d-flex align-items-center">
                            <div class="mr-1">
                                @if (Model.ContainedItems[id].ImageExists)
                                {
                                    <a href="~/item/@id">
                                        <img class="changes-image" src="~/img/items/@(id).png" />
                                    </a>
                                }
                                else
                                {
                                    <a href="~/item/@id">
                                        <img class="changes-image" src="~/img/NoImage.png" />
                                    </a>
                                }
                            </div>

                            <div>
                                <a href="~/item/@id">@Model.ContainedItems[id].Name</a>
                            </div>
                        </div>
                    }
                    else if (item.Field == "rarity" && item.OldValue != "")
                    {
                        string rarity = Model.AllRarites[Convert.ToInt32(item.OldValue)];
                        <div class="badge label-@rarity">@rarity</div>
                    }
                    else if (item.Field == "category" && item.OldValue != "")
                    {
                        <div>@Model.AllCategories[Convert.ToInt32(item.OldValue)]</div>
                    }
                    else if (item.Field == "type" && item.OldValue != "")
                    {
                        <div>@Model.AllTypes[Convert.ToInt32(item.OldValue)]</div>
                    }
                    else if (item.Field == "removed" && item.OldValue != "")
                    {
                        <div>@item.OldValue</div>
                    }
                    else
                    {
                        <div class="text-break">@item.OldValue</div>
                    }
                </td>
                <td class="align-middle">
                    @if (item.Field == "ingredient" && item.NewValue != "")
                    {
                        int id = Convert.ToInt32(item.NewValue);
                        <div class="d-flex align-items-center">
                            <div class="mr-1">
                                @if (Model.ContainedItems[id].ImageExists)
                                {
                                    <a href="~/item/@id">
                                        <img class="changes-image" src="~/img/items/@(id).png" />
                                    </a>
                                }
                                else
                                {
                                    <a href="~/item/@id">
                                        <img class="changes-image" src="~/img/NoImage.png" />
                                    </a>
                                }
                            </div>
                            <div>
                                <a href="~/item/@id">@Model.ContainedItems[id].Name</a>
                            </div>
                        </div>
                    }
                    else if (item.Field == "rarity" && item.NewValue != "")
                    {
                        string rarity = Model.AllRarites[Convert.ToInt32(item.NewValue)];
                        <div class="badge label-@rarity">@rarity</div>
                    }
                    else if (item.Field == "category" && item.NewValue != "")
                    {
                        <div>@Model.AllCategories[Convert.ToInt32(item.NewValue)]</div>
                    }
                    else if (item.Field == "type" && item.NewValue != "")
                    {
                        <div>@Model.AllTypes[Convert.ToInt32(item.NewValue)]</div>
                    }
                    else if (item.Field == "removed" && item.NewValue != "")
                    {
                        <div>@item.NewValue</div>
                    }
                    else
                    {
                        <div class="text-break">@item.NewValue</div>
                    }
                </td>
                <td class="align-middle">
                    <div class="item-timestamp">@item.TimestampString</div>
                </td>
            </tr>
        }
    </tbody>
</table>