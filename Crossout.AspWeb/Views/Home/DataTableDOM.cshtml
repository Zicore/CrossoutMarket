@using Crossout.Model.Items
@model Crossout.AspWeb.Models.General.SearchModel

<div class="my-1 p-1" id="dtButtonWrapper">
    <div class="d-flex justify-content-center my-1" id="dt-buttons"></div>
</div>

<table class="table table-striped table-borderless table-hover dt-responsive" id="ItemTable">
    <thead>
        <tr>
            <th class="dt-col" id="itemCol" data-priority="1">
                Item
            </th>
            <th class="dt-col never" id="idCol">
                ID
            </th>
            <th class="dt-col none" id="rarityCol">
                Rarity
            </th>
            <th class="dt-col none" id="factionCol">
                Faction
            </th>
            <th class="dt-col none" id="categoryCol">
                Category
            </th>
            <th class="dt-col none" id="typeCol">
                Type
            </th>
            <th class="dt-col none" id="availableCol">
                Available
            </th>
            <th class="dt-col none" id="craftableCol">
                Craftable
            </th>
            <th class="dt-col none" id="metaCol">
                Meta
            </th>
            <th class="dt-col none" id="popularityCol">
                Popularity
            </th>
            <th class="dt-col" id="sellCol" data-priority="1">
                Sell
            </th>
            <th class="dt-col" id="offersCol" data-priority="2">
                Offers
            </th>
            <th class="dt-col none" id="craftCostSellCol">
                Craft Cost (Sell)
            </th>
            <th class="dt-col" id="buyCol" data-priority="1">
                Buy
            </th>
            <th class="dt-col" id="ordersCol" data-priority="2">
                Orders
            </th>
            <th class="dt-col none" id="craftCostBuyCol">
                Craft Cost (Buy)
            </th>
            <th class="dt-col none" id="demandSupplyRatioCol" data-priority="2">
                Demand/Supply
            </th>
            <th class="dt-col none" id="marginCol" data-priority="2">
                Margin
            </th>
            <th class="dt-col none" id="roiCol" data-priority="2">
                ROI
            </th>
            <th class="dt-col none" id="craftMarginCol">
                Crafting Margin
            </th>
            <th class="dt-col none" id="craftAdviceCol">
                Crafting Advice
            </th>
            <th class="dt-col none" id="lastUpdateCol">
                Last Update
            </th>
        </tr>
    </thead>
    @foreach (Item item in Model.SearchResult)
    {
        <partial name="itempart" model="@item" />
    }
    <tbody>
    </tbody>
</table>

<script>
    //$('#table-wrapper').removeClass('d-none');
    //$('#dtButtonWrapper').removeClass('d-none');

    var domOption =
        "<'#dtButtons'B><'row m-1'<'d-inline-flex justify-content-start'p><'d-inline-flex ml-auto'l>>" +
        "<tr>" +
        "<'row m-1'<'d-inline-flex justify-content-start'p><'d-none d-sm-inline-flex ml-auto'i>>";

    $.fn.DataTable.ext.pager.numbers_length = 5;

    var order;
    var table;
    $(document).ready(function () {

        $('#loadingIcon').removeClass('d-flex').addClass('d-none');
        $('#table-wrapper').removeClass('d-none');
        $('#dtButtonWrapper').removeClass('d-none');
        checkExtendedSetting();
        adjustTimeStamp();

        var domOption =
            "<'row m-1'<'d-inline-flex justify-content-start'p><'d-inline-flex ml-auto text-secondary'l>>" +
            "<tr>" +
            "<'row m-1'<'d-inline-flex justify-content-start'p><'d-none d-sm-inline-flex ml-auto text-secondary'i>>";

        $.fn.DataTable.ext.pager.numbers_length = 5;

        var order = [[11, "desc"]];

        table = $('#ItemTable').DataTable({
            paging: true,
            searching: true,
            search: {
                smart: false,
                regex: false
            },
            autoWidth: false,
            responsive: {
                details: {
                    type: 'inline',
                    renderer: function (api, rowIdx, columns) {
                        var data = $.map(columns, function (col, i) {
                            return col.hidden ?
                                '<div class="d-inline-flex flex-column card p-1 px-2 m-2" data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '">' +
                                '<div class="font-weight-bold">' + col.title + '' + '</div> ' +
                                '<div>' + col.data + '</div>' +
                                '</div>' :
                                '';
                        }).join('');

                        return data ?
                            $('<div/>').append(data) :
                            false;
                    }
                }
            },
            columnDefs: [
                { targets: 0, width: '25%' },
                { targets: '_all', width: '15%' }
            ],
            buttons: {
                dom: {
                    //container: {
                    //    tag: 'ul',
                    //    className: 'pagination dataTables_button'
                    //},
                    //buttonContainer: {
                    //    tag: 'li',
                    //    className: 'paginate_button'
                    //},
                    button: {
                        tag: 'button',
                        className: 'btn btn-sm btn-outline-secondary'
                    }
                },
                buttons: [{
                    extend: 'excel',
                    text: 'Export as Excel',
                    filename: 'CrossoutDBExcelExport',
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        }
                    }
                }, {
                    extend: 'csv',
                    text: 'Export as CSV',
                    filename: 'CrossoutDBCSVExport',
                    exportOptions: {
                        modifier: {
                            page: 'current'
                        }
                    }
                }, {
                    action: function () {
                        exportToSpreadsheet();
                    },
                    text: 'Export to Spreadsheet'
                }
                ]
            },
            order: order,
            lengthMenu: [[10, 20, 50, -1], [10, 20, 50, "All"]],
            pagingType: "simple_numbers",
            dom: domOption,
            drawCallback: function () {
                $('.dataTables_paginate > .pagination').addClass('pagination-sm');
                resetRangeFilterCheckedStatus();
                watchlistFilterClass.checked = false;
            }
        });

        applyLocationHash(table);

        table.page.len(readSetting('length'));

        filterTable(table);

        $('#ItemTable').on('length.dt', function (e, options, len) {
            writeSetting('length', table.page.info().length);
        });

        // Place buttons in container
        table.buttons().container().appendTo('#dt-buttons');

        // Remove ugly classes in length selector
        $('#ItemTable_length').children().children().removeClass('custom-select custom-select-sm');
    });

    var firedOnce = false;

    var selectedList = [];
</script>