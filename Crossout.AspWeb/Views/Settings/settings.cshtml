@{
    Layout = "_Layout";
}

@model Crossout.Web.Models.General.SettingsModel

<partial name="header" model="@Model" />

<div class="half-hd-container px-3">
    <div class="card my-1 p-1">
        <p class="text-secondary">Search Page Settings</p>

        <div class="custom-control custom-switch">
            <input type="checkbox" class="custom-control-input" id="dropdownSwitch">
            <label class="custom-control-label" for="dropdownSwitch">Dropdown Filter</label>
        </div>

        <div class="form-inline">
            <select class="form-control form-control-sm" id="lengthSelect">
                <option value="10">10</option>
                <option value="20">20</option>
                <option value="50">50</option>
                <option value="-1">All</option>
            </select>
            <label class="control-label ml-1" for="lengthSelect">Entries shown</label>
        </div>

        <hr />

        <p class="text-secondary">Item Page Settings</p>

        <div class="custom-control custom-switch">
            <input type="checkbox" class="custom-control-input" id="dataGroupingSwitch">
            <label class="custom-control-label" for="dataGroupingSwitch">Chart Data Grouping</label>
        </div>



        <hr />

        <p class="text-secondary">Export / Import</p>

        <div class="input-group">
            <textarea class="form-control" rows="3" id="settingsStringBase64"></textarea>
            <div class="invalid-feedback">
                Couldn't parse settings
            </div>
        </div>

        <div class="btn-group mt-1">
            <button class="btn btn-outline-secondary" onclick="exportCookie()">Export Settings</button>
            <button class="btn btn-outline-secondary" onclick="parseCookie()">Parse String</button>
            <button class="btn btn-outline-secondary" onclick="importCookie(); applySettings();">Import String</button>
        </div>
    </div>
</div>

<script>
    function applySettings() {
        $('#dropdownSwitch').prop('checked', readSetting('dropdown'));
        $('#lengthSelect').val(readSetting('length'));
        $('#dataGroupingSwitch').prop('checked', readSetting('data-grouping'));
    }

    // Apply current settings
    $(document).ready(function () {
        applySettings();
    });

    // Search settings
    $('#dropdownSwitch').change(function () {
        writeSetting('dropdown', this.checked);
    });
    $('#lengthSelect').change(function () {
        writeSetting('length', this.value);
    });

    // Item settings
    $('#dataGroupingSwitch').change(function () {
        writeSetting('data-grouping', this.checked);
    });
</script>