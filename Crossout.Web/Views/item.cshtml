@{
    Layout = "layout.cshtml";
}

@using System.Collections.Generic
@using System.Linq
@using Crossout.Model.Recipes
@using Crossout.Web
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<Crossout.Web.Models.ItemModel>

@Html.Partial("header", null)

<div class="panel">
    <div class="panel-body">
        <table class="table table-hover table-condensed">
            <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Rarity
                </th>
                <th>
                    <div class="text-left pull-left">Number</div>
                    <div class="text-right clearfix rec-right">Sell Price</div>
                </th>
                <th>
                </th>
                <th>
                    <div class="text-left pull-left">Number</div>
                    <div class="text-right clearfix rec-right">Buy Price</div>
                </th>
            </tr>
            </thead>

            <tbody>
            @Html.Partial("recipepart", Model.Recipe.Recipe)
            

            @ShowTree(Model.Recipe.Recipe.Ingredients)

            @helper ShowTree(List<RecipeItem> items)
            {
                foreach (RecipeItem item in items)
                {
                    @Html.Partial("recipepart", item)
                    
                    if (item != null && item.Ingredients.Count > 0)
                    {
                        @ShowTree(item.Ingredients);
                    }
                    if (item.IngredientSum != null)
                    {
                        @Html.Partial("recipepart", item.IngredientSum)
                    }
                }
            }
                
            @if (Model.Recipe.Recipe.IngredientSum != null)
            {
                    @Html.Partial("recipepart", Model.Recipe.Recipe.IngredientSum)
            }
            </tbody>
        </table>
    </div>
</div>

<script>
    function updateTree(classname,recipe, parentRecipe ,superParentRecipe, show) {
        if(classname !== 'recipe-0'){
            $('.' + classname).each(function (i, obj) {
                var currentSuperParentRecipe = $(this).data('superparentrecipe');
                var currentParentRecipe = $(this).data('parentrecipe');
                var currentRecipe = $(this).data('recipe');
                var classname2 = 'recipe-' + $(this).data('recipe');
                if (currentParentRecipe === recipe && (currentSuperParentRecipe === parentRecipe)) {
                    if (show) {
                        $(this).show();
                    } else {
                        $(this).hide();
                        $(this).find('button').removeClass('glyphicon-minus').addClass('glyphicon-plus');
                        window.updateTree(classname2, currentRecipe, currentParentRecipe, currentSuperParentRecipe, show);
                    }
                }
            });
        }
    }

    var MaxDepth = 0;

    function updateSums(classname, recipe, parentRecipe, superParentRecipe, show, maxDepth) {
        MaxDepth = Math.max(maxDepth, MaxDepth);
        for (var i = 0; i <= MaxDepth; i++) {
            updateSum(MaxDepth, i);
        }
    }

    function updateSum(maxDepth,i) {
        $('.depth-' + (maxDepth - i)).each(function (j, obj) {
            //console.info(''+maxDepth + i);
            if ($(this).hasClass('sum-row') && $(this).is(':visible')) {
                //alert(1);
                console.info('sum row' + (maxDepth - i));

            }

            //var currentSuperParentRecipe = $(this).data('superparentrecipe');
            //var currentParentRecipe = $(this).data('parentrecipe');
            //var currentRecipe = $(this).data('recipe');
            //var classname2 = 'recipe-' + $(this).data('recipe');
            //if (currentParentRecipe === recipe && (currentSuperParentRecipe === parentRecipe)) {
            //    if ($(this).hasClass('sum-row') && !$(this).hasClass('collapse')) {
            //        //$(this).find('.sum-buy').text('155555');
            //        //$(this).find('.sum-sell').text('15151515151');
            //        console.info(classname2);
            //    }
            //    window.updateSums(classname2, currentRecipe, currentParentRecipe, currentSuperParentRecipe, show);
            //}
        });
    }

    function findItemInTable(recipe, parentRecipe, superParentRecipe, depth) {
        var foundObject;
        $('.depth-' + (depth)).each(function (j, obj) {
            var currentSuperParentRecipe = $(this).data('superparentrecipe');
            var currentParentRecipe = $(this).data('parentrecipe');
            var currentRecipe = $(this).data('recipe');
            if (currentParentRecipe == superparentrecipe && currentParentRecipe == parentrecipe && currentRecipe == recipe) {
                foundObject = $(this);
                return foundObject;
            }

        });
    }


</script>

@Html.Partial("chart", Model)